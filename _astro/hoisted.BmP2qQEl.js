import{p as _}from"./PhaserGame.astro_astro_type_script_index_0_lang._ApvJukS.js";import{a as w,H as N,T as E}from"./plugin.BvEP2jIA.js";import{d as V}from"./scene-with-phaser-wind.CCvtJV7P.js";import{S as A}from"./scene-with-hudini.BxHrxqEo.js";import"./hoisted.B7maJBHf.js";import"./webfontloader.QfD90YS_.js";const D=10;class R{constructor(e){this.plugin=e,this.plugin=e}get game(){return this.plugin.getGame()}loadBySoundKey(e,t){const{game:n,plugin:a}=this;n.cache.audio.has(t)||e.load.audio(t,a.soundList[t]?.path)}loadByChannel(e,t){const{plugin:n}=this;Object.entries(n.soundList).filter(a=>a[1].channel===t).forEach(([a])=>{this.loadBySoundKey(e,a)})}}class v{constructor(e){this.plugin=e,this.plugin=e}get game(){return this.plugin.getGame()}get soundRegistry(){return this.plugin.soundRegistry}play(e){const t=this.soundRegistry.getChannelBySoundKey(e);switch(t.mode){case"single":this.playSingleMode(e);break;case"multiple":this.playMultipleMode(e,t.maxInstances);break}}playSingleMode(e){const t=this.soundRegistry.getSoundBySoundKey(e);if(t){t.isPlaying||t.play();return}const n=this.soundRegistry.getSoundConfigBySoundKey(e);this.game.sound.add(e,{volume:n?.channel?this.plugin.getChannelVolume(n.channel):1,loop:n?.loop??!1}).play()}playMultipleMode(e,t=D){const n=this.soundRegistry.fetchSoundsBySoundKey(e),a=n.find(s=>!s.isPlaying);if(a){a.play();return}if(n.length<t){const s=this.soundRegistry.getSoundConfigBySoundKey(e);this.game.sound.add(e,{volume:s?.channel?this.plugin.getChannelVolume(s.channel):1,loop:s?.loop??!1}).play()}}}class K{constructor(e){this.plugin=e,this.plugin=e}get game(){return this.plugin.getGame()}get soundPlayer(){return this.plugin.soundPlayer}get channels(){return this.plugin.channels}get soundList(){return this.plugin.soundList}getSoundConfigBySoundKey(e){return this.soundList[e]??null}getSoundBySoundKey(e){const t=this.fetchSoundsBySoundKey(e);return t.length>0?t[0]:null}fetchSoundsBySoundKey(e){return this.game.sound.getAll(e)}getChannelBySoundKey(e){const t=this.soundList[e];return this.channels[t.channel]}}const u=()=>new Date().toISOString().replace("T"," ").replace("Z",""),h=o=>{const e=u(),t="%c[phaser-hooks]%c",n=o?` %c${o}%c`:"";return`%c[${e}]%c ${t}${n}`},d=o=>{const e=["color: #bd93f9; font-weight: bold;","color: inherit;","color: #2563eb; font-weight: bold;","color: inherit;"];return o&&e.push("color: #059669; font-weight: bold;","color: inherit;"),e},x=(o,e)=>{const t=h("STATE_INIT"),n=d("STATE_INIT");console.groupCollapsed(`${t} Initializing state "${o}"`,...n),console.log("🔧 Key:",o),console.log("📦 Initial Value:",e),console.log("⏰ Timestamp:",u()),console.groupEnd()},I=(o,e)=>{const t=h("STATE_GET"),n=d("STATE_GET");console.log(`${t} Getting state "${o}":`,...n,e)},S=(o,e,t)=>{const n=h("STATE_SET"),a=d("STATE_SET");console.groupCollapsed(`${n} Updating state "${o}"`,...a),console.log("🔑 Key:",o),console.log("📤 Old Value:",e),console.log("📥 New Value:",t),console.log("🔄 Changed:",e!==t),console.log("⏰ Timestamp:",u()),console.groupEnd()},T=(o,e,t)=>{const n=h("EVENT_ADD"),a=d("EVENT_ADD");console.groupCollapsed(`${n} Adding listener for "${o}"`,...a),console.log("🔑 Key:",o),console.log("📡 Event:",e),console.log("🎯 Callback:",t.name||"anonymous"),console.log("⏰ Timestamp:",u()),console.groupEnd()},y=(o,e,t)=>{const n=h("EVENT_REMOVE"),a=d("EVENT_REMOVE");console.groupCollapsed(`${n} Removing listener for "${o}"`,...a),console.log("🔑 Key:",o),console.log("📡 Event:",e),console.log("🎯 Callback:",t.name||"anonymous"),console.log("⏰ Timestamp:",u()),console.groupEnd()},P=o=>{const e=h("CLEAR_LISTENERS"),t=d("CLEAR_LISTENERS");console.groupCollapsed(`${e} Clearing all listeners for "${o}"`,...t),console.log("🔑 Key:",o),console.log("🧹 Action:","Removing all event listeners"),console.log("⏰ Timestamp:",u()),console.groupEnd()},B=(o,e,t)=>{const n=h(o),a=d(o);console.groupCollapsed(`${n} ERROR`,...a),console.error("🚨 Operation:",o),console.error("💥 Error:",e),t&&console.error("📋 Context:",t),console.error("⏰ Timestamp:",u()),console.groupEnd()},$=(o,e,t)=>{const n=h(o),a=d(o);console.groupCollapsed(`${n} WARNING`,...a),console.warn("⚠️ Operation:",o),console.warn("📢 Message:",e),t&&console.warn("📋 Context:",t),console.warn("⏰ Timestamp:",u()),console.groupEnd()},g=o=>o!==null&&typeof o=="object"&&!Array.isArray(o)&&Object.prototype.toString.call(o)==="[object Object]",f=o=>{if(o===null||typeof o!="object")return o;if(Array.isArray(o))return o.map(e=>f(e));if(g(o)){const e={};for(const t in o)Object.prototype.hasOwnProperty.call(o,t)&&(e[t]=f(o[t]));return e}return o},b=(o,...e)=>{if(!g(o))return o;let t=f(o);for(const n of e){if(!g(n))continue;const a=f(n);for(const s in a)if(Object.prototype.hasOwnProperty.call(a,s)){const r=a[s],l=t[s];g(r)&&g(l)?t[s]=b(l,r):r!==void 0&&(t[s]=r)}}return t},p=new WeakMap,M=(o,e,t)=>{const n=o.get(e);return t&&I(e,n),n},U=(o,e,t,n,a)=>{const s=o.get(e),r=typeof t=="function"?t(s):t;if(a){const l=a(r);if(l!==!0){const i=typeof l=="string"?l:`Invalid value for key "${e}"`;throw new Error(`[withStateDef] ${i}`)}}o.set(e,r),n&&S(e,s,r)},G=(o,e,t,n,a)=>{const s=o.get(e);if(typeof s!="object"||s===null)throw new Error("[withStateDef] Current value is not an object");const r=typeof t=="function"?t(s):t,l=b({},s,r);if(a){const i=a(l);if(i!==!0){const c=typeof i=="string"?i:`Invalid value for key "${e}"`;throw new Error(`[withStateDef] ${c}`)}}o.set(e,l),n&&S(e,s,l)},H=(o,e,t,n)=>{if($("DEPRECATED_ONCHANGE","onChange callback is deprecated in phaser-hooks. Use .on('change', callback) or .once('change', callback) instead.",{key:e}),!n||typeof n!="function")throw new Error("[withStateDef] onChange callback must be a function");o.events.on(`changedata-${e}`,(a,s,r,l)=>{t&&S(s,l,r);try{n(r,l)}catch(i){B("ONCHANGE_CALLBACK_ERROR",i,{key:s})}})},z=(o,e,t,n,a)=>{if(e!=="change")throw new Error('[withStateDef] Invalid event. Only "change" is supported.');const s=(r,l,i)=>{a(l,i)};return p.has(a)||p.set(a,s),n&&T(t,e,s),o.events.on(`changedata-${t}`,s),()=>{n&&y(t,e,s),o.events.off(`changedata-${t}`,s)}},j=(o,e,t)=>{if(!o)throw new Error("[withStateDef] Scene parameter is required");if(!t||typeof t!="string"||t.trim().length===0)throw new Error("[withStateDef] Key must be a non-empty string");if(e.global&&!o.registry)throw new Error("[withStateDef] Scene registry is not available. Ensure the scene is properly initialized.");if(!e.global&&!o.data)throw new Error("[withStateDef] Scene data is not available. Ensure the scene is properly initialized.")},F=(o,e,t,n,a)=>{if(!o.has(e)&&a!==void 0){if(n){const s=n(a);if(s!==!0){const r=typeof s=="string"?s:`Invalid initial value for key "${e}"`;throw new Error(`[withStateDef] ${r}`)}}o.set(e,a),t&&x(e,a)}},W=(o,e,t,n,a)=>{if(e!=="change")throw new Error('[withStateDef] Invalid event. Only "change" is supported.');const s=(r,l,i)=>{a(l,i)};return p.has(a)||p.set(a,s),n&&T(t,e,s),o.events.once(`changedata-${t}`,s),()=>{n&&y(t,e,s),o.events.off(`changedata-${t}`,s)}},Y=(o,e,t,n,a)=>{if(e!=="change")throw new Error('[withStateDef] Invalid event. Only "change" is supported.');const s=p.get(a);if(!s){$("CALLBACK_NOT_FOUND",`Callback not found for key "${t}"`,{key:t});return}o.events.off(`changedata-${t}`,s),n&&y(t,e,s)},q=(o,e,t)=>{o.events.removeAllListeners(`changedata-${e}`),t&&P(e)},J=(o,e,t,n={})=>{j(o,n,e);const{validator:a,debug:s=!1,global:r=!1}=n,l=r?o.registry:o.data;return F(l,e,s,a,t),{get:()=>M(l,e,s),set:i=>U(l,e,i,s,a),patch:i=>G(l,e,i,s,a),onChange:i=>H(l,e,s,i),on:(i,c)=>z(l,i,e,s,c),once:(i,c)=>W(l,i,e,s,c),off:(i,c)=>Y(l,i,e,s,c),clearListeners:()=>q(l,e,s)}},X=(o,e,t,n)=>{if(!o)throw new Error("[withGlobalState] Scene parameter is required");const a=`phaser-hooks:global:${e}`;return J(o,a,t,{...n,global:!0})},C=(o,e,t,n,a="local")=>{const s=`phaser-hooks-state:${e}`;let r=t;try{const i=a==="local"?localStorage.getItem(s):sessionStorage.getItem(s);i&&(r=JSON.parse(i))}catch(i){console.warn(`[withPersistentState] Failed to load stored state for "${e}":`,i)}const l=X(o,e,r);return l.onChange(i=>{try{(a==="local"?localStorage:sessionStorage).setItem(s,JSON.stringify(i))}catch(c){console.warn(`[withPersistentState] Failed to save state for "${e}":`,c)}}),l},m="soundStudio";class Z extends _.Plugins.BasePlugin{channelVolumes={};soundPlayer;soundLoader;soundRegistry;soundList;channels;storage;gameName;getGame(){return this.game}constructor(e){super(e),this.soundList={},this.soundLoader=new R(this),this.channels={},this.storage="local",this.soundPlayer=new v(this),this.soundRegistry=new K(this)}init({soundList:e,channels:t,storage:n,gameName:a}){this.soundList=e,this.channels=t,this.storage=n,this.gameName=a,Object.keys(t).forEach(s=>{this.channelVolumes[s]=1})}loadAll(e){const t=Object.entries(this.soundList).filter(n=>n[1].preload!==!1);for(const[n,a]of t)e.load.audio(n,a.path);this.loadChannelVolumes(e)}loadByChannel(e,t){this.soundLoader.loadByChannel(e,t),this.loadChannelVolumes(e)}loadBySoundKey(e,t){this.soundLoader.loadBySoundKey(e,t)}play(e){this.soundPlayer.play(e)}playOnce(e,t){e.sound.get(t)?.isPlaying||this.play(t)}lazyLoadPlay(e,t){const n=this.soundList[t]?.path;n&&(e.load.audio(t,n),e.load.once(`filecomplete-audio-${t}`,()=>{this.play(t)}))}setChannelVolume(e,t,n){(n<0||n>1)&&(n=Math.max(0,Math.min(1,n)),console.warn(`Volume must be between 0 and 1. Setting volume to ${n} instead in channel ${t}.`)),this.channelVolumes[t]=n,Object.entries(this.soundList).filter(a=>a[1].channel===t).forEach(([a])=>{const s=e.sound.get(a);s&&"setVolume"in s&&s.setVolume(n)}),this.saveChannelVolumes(e)}getChannelVolume(e){return this.channelVolumes[e]??1}muteChannel(e,t){this.setChannelVolume(e,t,0)}unmuteChannel(e,t){this.setChannelVolume(e,t,1)}getAllChannels(){return this.channels}persistNameKey(){return this.gameName?`phaser-sound-studio-volumes:${this.gameName}`:"phaser-sound-studio-volumes"}saveChannelVolumes(e){C(e,this.persistNameKey(),this.channelVolumes,void 0,this.storage).set(this.channelVolumes)}loadChannelVolumes(e){const t=C(e,this.persistNameKey(),this.channelVolumes,void 0,this.storage);this.channelVolumes=t.get()}}const Q=(o,e=m)=>o.plugins.get(e),O={MOUSE_HOVER:"mouse-hover",MOUSE_CLICK:"mouse-click"},L={HUD:"hud"},k={[O.MOUSE_HOVER]:{channel:L.HUD,preload:!0,path:"/sounds/ui-pop.m4a",loop:!1},[O.MOUSE_CLICK]:{channel:L.HUD,preload:!0,path:"/sounds/click.mp3",loop:!1}};class ee extends A{constructor(){super("sound-studio-demo")}preload(){Q(this).loadAll(this)}create(){this.cameras.main.setBackgroundColor(this.pw.color.rgb("slate-900")),this.add.text(400,100,"Phaser Sound Studio Demo",{color:"#ffffff",align:"center",fontSize:"32px"}).setOrigin(.5,.5),this.add.text(400,150,"Click the button to play a sound effect",{color:"#bdc3c7",align:"center",fontSize:"18px"}).setOrigin(.5,.5);const e=new E({scene:this,x:400,y:250,backgroundColor:"blue-500",textColor:"white",text:"Play Click Sound",onClick:()=>{console.log("Playing click sound...")}}),t=new E({scene:this,x:400,y:320,backgroundColor:"green-500",textColor:"white",text:"Play Hover Sound",onClick:()=>{console.log("Playing hover sound...")}});this.add.existing(e),this.add.existing(t),this.add.text(400,450,"Sound Channels: HUD, SFX, MUSIC, VOICE",{color:"#95a5a6",align:"center",fontSize:"14px"}).setOrigin(.5,.5),this.add.text(400,500,"Note: This is a demo - actual sound files would be loaded",{color:"#e74c3c",align:"center",fontSize:"12px"}).setOrigin(.5,.5)}}document.addEventListener("DOMContentLoaded",()=>{const o=window.gameContainer;if(o){const e=new Phaser.Game({...o,plugins:{global:[{key:w,plugin:N,mapping:w,start:!0,data:{theme:V}},{key:m,plugin:Z,mapping:m,start:!0,data:{soundList:k,channels:["hud"]}}]},scene:[ee]});window.__phaserGames||(window.__phaserGames={}),window.__phaserGames["phaser-sound-studio-main-demo"]=e}});
