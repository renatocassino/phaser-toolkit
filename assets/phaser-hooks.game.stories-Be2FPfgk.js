import"./plugin-HFtBARcL.js";import{F as g,C as m,c as D,n as u,a as y}from"./create-game-Dqgfp28j.js";import{S}from"./scene-with-hudini-DCgcD6-P.js";import"./webfontloader-VUTCp1vF.js";import"./_commonjsHelpers-Cpj98o6Y.js";const b=(t,e,a,r={})=>{if(!t)throw new Error("[withStateDef] Scene parameter is required");if(r.global&&!t.registry)throw new Error("[withStateDef] Scene registry is not available. Ensure the scene is properly initialized.");if(!r.global&&!t.data)throw new Error("[withStateDef] Scene data is not available. Ensure the scene is properly initialized.");if(!e||typeof e!="string"||e.trim().length===0)throw new Error("[withStateDef] Key must be a non-empty string");const{validator:o,debug:s=!1,global:f=!1}=r,i=f?t.registry:t.data;if(!i.has(e)&&a!==void 0){if(o){const n=o(a);if(n!==!0){const l=typeof n=="string"?n:`Invalid initial value for key "${e}"`;throw new Error(`[withStateDef] ${l}`)}}i.set(e,a),s&&console.debug(`[withStateDef] Initialized "${e}" with value:`,a)}return{get:()=>{const n=i.get(e);return s&&console.debug(`[withStateDef] Getting "${e}":`,n),n},set:n=>{if(o){const c=o(n);if(c!==!0){const d=typeof c=="string"?c:`Invalid value for key "${e}"`;throw new Error(`[withStateDef] ${d}`)}}const l=i.get(e);i.set(e,n),s&&console.debug(`[withStateDef] Setting "${e}":`,{oldValue:l,newValue:n})},onChange:n=>{if(!n||typeof n!="function")throw new Error("[withStateDef] onChange callback must be a function");(f?i.events:t.data.events).on(`changedata-${e}`,(l,c,d,p)=>{s&&console.debug(`[withStateDef] Change detected for "${c}":`,{previousValue:p,value:d});try{n(d,p)}catch(E){console.error(`[withStateDef] Error in onChange callback for "${c}":`,E)}})}}},v=(t,e,a,r)=>{if(!t)throw new Error("[withLocalState] Scene parameter is required");const s=`local:${t.scene?.key||"unknown-scene"}:${e}`;return b(t,s,a,{...r,global:!1})},x=(t,e,a,r)=>{if(!t)throw new Error("[withGlobalState] Scene parameter is required");const s=`local:${t.scene?.key||"unknown-scene"}:${e}`;return b(t,s,a,{...r,global:!0})},w="phaser-hooks-game";class P extends S{constructor(){super("PreviewScene")}preload(){}create(){v(this,"test","test").set("Local state definido na preview 1"),x(this,"test","Global state definido na preview 1").set("Global state definido na preview 1");const r=this.cameras.main.centerX,o=this.cameras.main.centerY;this.add.text(r,o-180,"Phaser Wind",{color:m.rgb("slate-200"),align:"center",fontSize:g.px("6xl")}).setOrigin(.5,.5),this.add.text(r,o,"Go to Scene 2",{color:m.rgb("slate-200"),align:"center",fontSize:g.px("2xl"),backgroundColor:"#4A5568",padding:{x:20,y:10}}).setOrigin(.5).setInteractive({useHandCursor:!0}).on("pointerdown",()=>{this.scene.start("PreviewScene2")})}}class G extends S{constructor(){super("PreviewScene2")}preload(){}create(){const e=v(this,"test","test");console.log(e.get(),"<<<<< preview 2");const a=x(this,"test","Global state definido na preview 2");console.log(a.get(),"<<<<< preview 2");const r=this.cameras.main.centerX,o=this.cameras.main.centerY;this.add.text(r,o-180,"Phaser Wind",{color:m.rgb("slate-200"),align:"center",fontSize:g.px("6xl")}).setOrigin(.5,.5)}}const A={title:"Phaser Hooks/Game Example",parameters:{docs:{description:{component:"A basic game example using Phaser Hooks for state management"}}}},h={render:()=>{const t=document.createElement("div");return t.id=w,t},play:async()=>{await D(),await u(1),y(w,{type:Phaser.AUTO,width:800,height:600,parent:w,backgroundColor:"#2c3e50",scene:[P,G]}),await u(1)}};h.parameters={...h.parameters,docs:{...h.parameters?.docs,source:{originalSource:`{
  render: (): HTMLElement => {
    const root = document.createElement('div');
    root.id = ID;
    return root;
  },
  play: async (): Promise<void> => {
    await cleanGames();
    await nextFrames(1);
    createGame(ID, {
      type: Phaser.AUTO,
      width: 800,
      height: 600,
      parent: ID,
      backgroundColor: '#2c3e50',
      scene: [PreviewScene, PreviewScene2]
    });
    await nextFrames(1);
  }
}`,...h.parameters?.docs?.source}}};const L=["PreviewScene","PreviewScene2","GameExample"];export{h as GameExample,P as PreviewScene,G as PreviewScene2,L as __namedExportsOrder,A as default};
