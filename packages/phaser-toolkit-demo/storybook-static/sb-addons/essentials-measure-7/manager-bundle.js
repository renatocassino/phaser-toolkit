try {
  (() => {
    var c = __REACT__,
      {
        Children: B,
        Component: R,
        Fragment: P,
        Profiler: f,
        PureComponent: L,
        StrictMode: w,
        Suspense: E,
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: D,
        cloneElement: U,
        createContext: M,
        createElement: v,
        createFactory: x,
        createRef: H,
        forwardRef: F,
        isValidElement: N,
        lazy: G,
        memo: W,
        startTransition: K,
        unstable_act: Y,
        useCallback: d,
        useContext: j,
        useDebugValue: V,
        useDeferredValue: q,
        useEffect: p,
        useId: z,
        useImperativeHandle: Z,
        useInsertionEffect: J,
        useLayoutEffect: Q,
        useMemo: X,
        useReducer: $,
        useRef: oo,
        useState: eo,
        useSyncExternalStore: no,
        useTransition: to,
        version: co,
      } = __REACT__;
    var lo = __STORYBOOK_API__,
      {
        ActiveTabs: io,
        Consumer: po,
        ManagerContext: uo,
        Provider: mo,
        RequestResponseError: So,
        addons: s,
        combineParameters: _o,
        controlOrMetaKey: ho,
        controlOrMetaSymbol: Co,
        eventMatchesShortcut: bo,
        eventToShortcut: ko,
        experimental_MockUniversalStore: yo,
        experimental_UniversalStore: Ao,
        experimental_requestResponse: To,
        experimental_useUniversalStore: go,
        isMacLike: Oo,
        isShortcutTaken: Bo,
        keyToSymbol: Ro,
        merge: Po,
        mockChannel: fo,
        optionOrAltSymbol: Lo,
        shortcutMatchesShortcut: wo,
        shortcutToHumanString: Eo,
        types: u,
        useAddonState: Do,
        useArgTypes: Uo,
        useArgs: Mo,
        useChannel: vo,
        useGlobalTypes: xo,
        useGlobals: m,
        useParameter: Ho,
        useSharedState: Fo,
        useStoryPrepared: No,
        useStorybookApi: S,
        useStorybookState: Go,
      } = __STORYBOOK_API__;
    var Vo = __STORYBOOK_COMPONENTS__,
      {
        A: qo,
        ActionBar: zo,
        AddonPanel: Zo,
        Badge: Jo,
        Bar: Qo,
        Blockquote: Xo,
        Button: $o,
        ClipboardCode: oe,
        Code: ee,
        DL: ne,
        Div: te,
        DocumentWrapper: ce,
        EmptyTabContent: re,
        ErrorFormatter: ae,
        FlexBar: Ie,
        Form: se,
        H1: le,
        H2: ie,
        H3: de,
        H4: pe,
        H5: ue,
        H6: me,
        HR: Se,
        IconButton: _,
        IconButtonSkeleton: _e,
        Icons: he,
        Img: Ce,
        LI: be,
        Link: ke,
        ListItem: ye,
        Loader: Ae,
        Modal: Te,
        OL: ge,
        P: Oe,
        Placeholder: Be,
        Pre: Re,
        ProgressSpinner: Pe,
        ResetWrapper: fe,
        ScrollArea: Le,
        Separator: we,
        Spaced: Ee,
        Span: De,
        StorybookIcon: Ue,
        StorybookLogo: Me,
        Symbols: ve,
        SyntaxHighlighter: xe,
        TT: He,
        TabBar: Fe,
        TabButton: Ne,
        TabWrapper: Ge,
        Table: We,
        Tabs: Ke,
        TabsState: Ye,
        TooltipLinkList: je,
        TooltipMessage: Ve,
        TooltipNote: qe,
        UL: ze,
        WithTooltip: Ze,
        WithTooltipPure: Je,
        Zoom: Qe,
        codeCommon: Xe,
        components: $e,
        createCopyToClipboardFunction: on,
        getStoryHref: en,
        icons: nn,
        interleaveSeparators: tn,
        nameSpaceClassNames: cn,
        resetComponents: rn,
        withReset: an,
      } = __STORYBOOK_COMPONENTS__;
    var pn = __STORYBOOK_ICONS__,
      {
        AccessibilityAltIcon: un,
        AccessibilityIcon: mn,
        AccessibilityIgnoredIcon: Sn,
        AddIcon: _n,
        AdminIcon: hn,
        AlertAltIcon: Cn,
        AlertIcon: bn,
        AlignLeftIcon: kn,
        AlignRightIcon: yn,
        AppleIcon: An,
        ArrowBottomLeftIcon: Tn,
        ArrowBottomRightIcon: gn,
        ArrowDownIcon: On,
        ArrowLeftIcon: Bn,
        ArrowRightIcon: Rn,
        ArrowSolidDownIcon: Pn,
        ArrowSolidLeftIcon: fn,
        ArrowSolidRightIcon: Ln,
        ArrowSolidUpIcon: wn,
        ArrowTopLeftIcon: En,
        ArrowTopRightIcon: Dn,
        ArrowUpIcon: Un,
        AzureDevOpsIcon: Mn,
        BackIcon: vn,
        BasketIcon: xn,
        BatchAcceptIcon: Hn,
        BatchDenyIcon: Fn,
        BeakerIcon: Nn,
        BellIcon: Gn,
        BitbucketIcon: Wn,
        BoldIcon: Kn,
        BookIcon: Yn,
        BookmarkHollowIcon: jn,
        BookmarkIcon: Vn,
        BottomBarIcon: qn,
        BottomBarToggleIcon: zn,
        BoxIcon: Zn,
        BranchIcon: Jn,
        BrowserIcon: Qn,
        ButtonIcon: Xn,
        CPUIcon: $n,
        CalendarIcon: ot,
        CameraIcon: et,
        CameraStabilizeIcon: nt,
        CategoryIcon: tt,
        CertificateIcon: ct,
        ChangedIcon: rt,
        ChatIcon: at,
        CheckIcon: It,
        ChevronDownIcon: st,
        ChevronLeftIcon: lt,
        ChevronRightIcon: it,
        ChevronSmallDownIcon: dt,
        ChevronSmallLeftIcon: pt,
        ChevronSmallRightIcon: ut,
        ChevronSmallUpIcon: mt,
        ChevronUpIcon: St,
        ChromaticIcon: _t,
        ChromeIcon: ht,
        CircleHollowIcon: Ct,
        CircleIcon: bt,
        ClearIcon: kt,
        CloseAltIcon: yt,
        CloseIcon: At,
        CloudHollowIcon: Tt,
        CloudIcon: gt,
        CogIcon: Ot,
        CollapseIcon: Bt,
        CommandIcon: Rt,
        CommentAddIcon: Pt,
        CommentIcon: ft,
        CommentsIcon: Lt,
        CommitIcon: wt,
        CompassIcon: Et,
        ComponentDrivenIcon: Dt,
        ComponentIcon: Ut,
        ContrastIcon: Mt,
        ContrastIgnoredIcon: vt,
        ControlsIcon: xt,
        CopyIcon: Ht,
        CreditIcon: Ft,
        CrossIcon: Nt,
        DashboardIcon: Gt,
        DatabaseIcon: Wt,
        DeleteIcon: Kt,
        DiamondIcon: Yt,
        DirectionIcon: jt,
        DiscordIcon: Vt,
        DocChartIcon: qt,
        DocListIcon: zt,
        DocumentIcon: Zt,
        DownloadIcon: Jt,
        DragIcon: Qt,
        EditIcon: Xt,
        EllipsisIcon: $t,
        EmailIcon: oc,
        ExpandAltIcon: ec,
        ExpandIcon: nc,
        EyeCloseIcon: tc,
        EyeIcon: cc,
        FaceHappyIcon: rc,
        FaceNeutralIcon: ac,
        FaceSadIcon: Ic,
        FacebookIcon: sc,
        FailedIcon: lc,
        FastForwardIcon: ic,
        FigmaIcon: dc,
        FilterIcon: pc,
        FlagIcon: uc,
        FolderIcon: mc,
        FormIcon: Sc,
        GDriveIcon: _c,
        GithubIcon: hc,
        GitlabIcon: Cc,
        GlobeIcon: bc,
        GoogleIcon: kc,
        GraphBarIcon: yc,
        GraphLineIcon: Ac,
        GraphqlIcon: Tc,
        GridAltIcon: gc,
        GridIcon: Oc,
        GrowIcon: Bc,
        HeartHollowIcon: Rc,
        HeartIcon: Pc,
        HomeIcon: fc,
        HourglassIcon: Lc,
        InfoIcon: wc,
        ItalicIcon: Ec,
        JumpToIcon: Dc,
        KeyIcon: Uc,
        LightningIcon: Mc,
        LightningOffIcon: vc,
        LinkBrokenIcon: xc,
        LinkIcon: Hc,
        LinkedinIcon: Fc,
        LinuxIcon: Nc,
        ListOrderedIcon: Gc,
        ListUnorderedIcon: Wc,
        LocationIcon: Kc,
        LockIcon: Yc,
        MarkdownIcon: jc,
        MarkupIcon: Vc,
        MediumIcon: qc,
        MemoryIcon: zc,
        MenuIcon: Zc,
        MergeIcon: Jc,
        MirrorIcon: Qc,
        MobileIcon: Xc,
        MoonIcon: $c,
        NutIcon: or,
        OutboxIcon: er,
        OutlineIcon: nr,
        PaintBrushIcon: tr,
        PaperClipIcon: cr,
        ParagraphIcon: rr,
        PassedIcon: ar,
        PhoneIcon: Ir,
        PhotoDragIcon: sr,
        PhotoIcon: lr,
        PhotoStabilizeIcon: ir,
        PinAltIcon: dr,
        PinIcon: pr,
        PlayAllHollowIcon: ur,
        PlayBackIcon: mr,
        PlayHollowIcon: Sr,
        PlayIcon: _r,
        PlayNextIcon: hr,
        PlusIcon: Cr,
        PointerDefaultIcon: br,
        PointerHandIcon: kr,
        PowerIcon: yr,
        PrintIcon: Ar,
        ProceedIcon: Tr,
        ProfileIcon: gr,
        PullRequestIcon: Or,
        QuestionIcon: Br,
        RSSIcon: Rr,
        RedirectIcon: Pr,
        ReduxIcon: fr,
        RefreshIcon: Lr,
        ReplyIcon: wr,
        RepoIcon: Er,
        RequestChangeIcon: Dr,
        RewindIcon: Ur,
        RulerIcon: h,
        SaveIcon: Mr,
        SearchIcon: vr,
        ShareAltIcon: xr,
        ShareIcon: Hr,
        ShieldIcon: Fr,
        SideBySideIcon: Nr,
        SidebarAltIcon: Gr,
        SidebarAltToggleIcon: Wr,
        SidebarIcon: Kr,
        SidebarToggleIcon: Yr,
        SpeakerIcon: jr,
        StackedIcon: Vr,
        StarHollowIcon: qr,
        StarIcon: zr,
        StatusFailIcon: Zr,
        StatusIcon: Jr,
        StatusPassIcon: Qr,
        StatusWarnIcon: Xr,
        StickerIcon: $r,
        StopAltHollowIcon: oa,
        StopAltIcon: ea,
        StopIcon: na,
        StorybookIcon: ta,
        StructureIcon: ca,
        SubtractIcon: ra,
        SunIcon: aa,
        SupportIcon: Ia,
        SweepIcon: sa,
        SwitchAltIcon: la,
        SyncIcon: ia,
        TabletIcon: da,
        ThumbsUpIcon: pa,
        TimeIcon: ua,
        TimerIcon: ma,
        TransferIcon: Sa,
        TrashIcon: _a,
        TwitterIcon: ha,
        TypeIcon: Ca,
        UbuntuIcon: ba,
        UndoIcon: ka,
        UnfoldIcon: ya,
        UnlockIcon: Aa,
        UnpinIcon: Ta,
        UploadIcon: ga,
        UserAddIcon: Oa,
        UserAltIcon: Ba,
        UserIcon: Ra,
        UsersIcon: Pa,
        VSCodeIcon: fa,
        VerifiedIcon: La,
        VideoIcon: wa,
        WandIcon: Ea,
        WatchIcon: Da,
        WindowsIcon: Ua,
        WrenchIcon: Ma,
        XIcon: va,
        YoutubeIcon: xa,
        ZoomIcon: Ha,
        ZoomOutIcon: Fa,
        ZoomResetIcon: Na,
        iconList: Ga,
      } = __STORYBOOK_ICONS__;
    var l = 'storybook/measure-addon',
      C = `${l}/tool`,
      b = () => {
        let [r, t] = m(),
          { measureEnabled: a } = r,
          i = S(),
          I = d(() => t({ measureEnabled: !a }), [t, a]);
        return (
          p(() => {
            i.setAddonShortcut(l, {
              label: 'Toggle Measure [M]',
              defaultShortcut: ['M'],
              actionName: 'measure',
              showInMenu: !1,
              action: I,
            });
          }, [I, i]),
          c.createElement(
            _,
            { key: C, active: a, title: 'Enable measure', onClick: I },
            c.createElement(h, null)
          )
        );
      };
    s.register(l, () => {
      s.add(C, {
        type: u.TOOL,
        title: 'Measure',
        match: ({ viewMode: r, tabId: t }) => r === 'story' && !t,
        render: () => c.createElement(b, null),
      });
    });
  })();
} catch (e) {
  console.error(
    '[Storybook] One of your manager-entries failed: ' + import.meta.url,
    e
  );
}
