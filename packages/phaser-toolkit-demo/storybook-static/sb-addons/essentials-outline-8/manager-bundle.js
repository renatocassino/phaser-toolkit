try {
  (() => {
    var c = __REACT__,
      {
        Children: P,
        Component: R,
        Fragment: f,
        Profiler: w,
        PureComponent: L,
        StrictMode: E,
        Suspense: D,
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: U,
        cloneElement: v,
        createContext: x,
        createElement: H,
        createFactory: M,
        createRef: F,
        forwardRef: N,
        isValidElement: G,
        lazy: W,
        memo: p,
        startTransition: K,
        unstable_act: Y,
        useCallback: u,
        useContext: j,
        useDebugValue: V,
        useDeferredValue: q,
        useEffect: d,
        useId: z,
        useImperativeHandle: Z,
        useInsertionEffect: J,
        useLayoutEffect: Q,
        useMemo: X,
        useReducer: $,
        useRef: oo,
        useState: eo,
        useSyncExternalStore: no,
        useTransition: to,
        version: co,
      } = __REACT__;
    var lo = __STORYBOOK_API__,
      {
        ActiveTabs: io,
        Consumer: po,
        ManagerContext: uo,
        Provider: mo,
        RequestResponseError: So,
        addons: s,
        combineParameters: _o,
        controlOrMetaKey: ho,
        controlOrMetaSymbol: Co,
        eventMatchesShortcut: bo,
        eventToShortcut: Ao,
        experimental_MockUniversalStore: ko,
        experimental_UniversalStore: yo,
        experimental_requestResponse: To,
        experimental_useUniversalStore: go,
        isMacLike: Oo,
        isShortcutTaken: Bo,
        keyToSymbol: Po,
        merge: Ro,
        mockChannel: fo,
        optionOrAltSymbol: wo,
        shortcutMatchesShortcut: Lo,
        shortcutToHumanString: Eo,
        types: m,
        useAddonState: Do,
        useArgTypes: Uo,
        useArgs: vo,
        useChannel: xo,
        useGlobalTypes: Ho,
        useGlobals: S,
        useParameter: Mo,
        useSharedState: Fo,
        useStoryPrepared: No,
        useStorybookApi: _,
        useStorybookState: Go,
      } = __STORYBOOK_API__;
    var Vo = __STORYBOOK_COMPONENTS__,
      {
        A: qo,
        ActionBar: zo,
        AddonPanel: Zo,
        Badge: Jo,
        Bar: Qo,
        Blockquote: Xo,
        Button: $o,
        ClipboardCode: oe,
        Code: ee,
        DL: ne,
        Div: te,
        DocumentWrapper: ce,
        EmptyTabContent: re,
        ErrorFormatter: Ie,
        FlexBar: ae,
        Form: se,
        H1: le,
        H2: ie,
        H3: pe,
        H4: ue,
        H5: de,
        H6: me,
        HR: Se,
        IconButton: h,
        IconButtonSkeleton: _e,
        Icons: he,
        Img: Ce,
        LI: be,
        Link: Ae,
        ListItem: ke,
        Loader: ye,
        Modal: Te,
        OL: ge,
        P: Oe,
        Placeholder: Be,
        Pre: Pe,
        ProgressSpinner: Re,
        ResetWrapper: fe,
        ScrollArea: we,
        Separator: Le,
        Spaced: Ee,
        Span: De,
        StorybookIcon: Ue,
        StorybookLogo: ve,
        Symbols: xe,
        SyntaxHighlighter: He,
        TT: Me,
        TabBar: Fe,
        TabButton: Ne,
        TabWrapper: Ge,
        Table: We,
        Tabs: Ke,
        TabsState: Ye,
        TooltipLinkList: je,
        TooltipMessage: Ve,
        TooltipNote: qe,
        UL: ze,
        WithTooltip: Ze,
        WithTooltipPure: Je,
        Zoom: Qe,
        codeCommon: Xe,
        components: $e,
        createCopyToClipboardFunction: on,
        getStoryHref: en,
        icons: nn,
        interleaveSeparators: tn,
        nameSpaceClassNames: cn,
        resetComponents: rn,
        withReset: In,
      } = __STORYBOOK_COMPONENTS__;
    var un = __STORYBOOK_ICONS__,
      {
        AccessibilityAltIcon: dn,
        AccessibilityIcon: mn,
        AccessibilityIgnoredIcon: Sn,
        AddIcon: _n,
        AdminIcon: hn,
        AlertAltIcon: Cn,
        AlertIcon: bn,
        AlignLeftIcon: An,
        AlignRightIcon: kn,
        AppleIcon: yn,
        ArrowBottomLeftIcon: Tn,
        ArrowBottomRightIcon: gn,
        ArrowDownIcon: On,
        ArrowLeftIcon: Bn,
        ArrowRightIcon: Pn,
        ArrowSolidDownIcon: Rn,
        ArrowSolidLeftIcon: fn,
        ArrowSolidRightIcon: wn,
        ArrowSolidUpIcon: Ln,
        ArrowTopLeftIcon: En,
        ArrowTopRightIcon: Dn,
        ArrowUpIcon: Un,
        AzureDevOpsIcon: vn,
        BackIcon: xn,
        BasketIcon: Hn,
        BatchAcceptIcon: Mn,
        BatchDenyIcon: Fn,
        BeakerIcon: Nn,
        BellIcon: Gn,
        BitbucketIcon: Wn,
        BoldIcon: Kn,
        BookIcon: Yn,
        BookmarkHollowIcon: jn,
        BookmarkIcon: Vn,
        BottomBarIcon: qn,
        BottomBarToggleIcon: zn,
        BoxIcon: Zn,
        BranchIcon: Jn,
        BrowserIcon: Qn,
        ButtonIcon: Xn,
        CPUIcon: $n,
        CalendarIcon: ot,
        CameraIcon: et,
        CameraStabilizeIcon: nt,
        CategoryIcon: tt,
        CertificateIcon: ct,
        ChangedIcon: rt,
        ChatIcon: It,
        CheckIcon: at,
        ChevronDownIcon: st,
        ChevronLeftIcon: lt,
        ChevronRightIcon: it,
        ChevronSmallDownIcon: pt,
        ChevronSmallLeftIcon: ut,
        ChevronSmallRightIcon: dt,
        ChevronSmallUpIcon: mt,
        ChevronUpIcon: St,
        ChromaticIcon: _t,
        ChromeIcon: ht,
        CircleHollowIcon: Ct,
        CircleIcon: bt,
        ClearIcon: At,
        CloseAltIcon: kt,
        CloseIcon: yt,
        CloudHollowIcon: Tt,
        CloudIcon: gt,
        CogIcon: Ot,
        CollapseIcon: Bt,
        CommandIcon: Pt,
        CommentAddIcon: Rt,
        CommentIcon: ft,
        CommentsIcon: wt,
        CommitIcon: Lt,
        CompassIcon: Et,
        ComponentDrivenIcon: Dt,
        ComponentIcon: Ut,
        ContrastIcon: vt,
        ContrastIgnoredIcon: xt,
        ControlsIcon: Ht,
        CopyIcon: Mt,
        CreditIcon: Ft,
        CrossIcon: Nt,
        DashboardIcon: Gt,
        DatabaseIcon: Wt,
        DeleteIcon: Kt,
        DiamondIcon: Yt,
        DirectionIcon: jt,
        DiscordIcon: Vt,
        DocChartIcon: qt,
        DocListIcon: zt,
        DocumentIcon: Zt,
        DownloadIcon: Jt,
        DragIcon: Qt,
        EditIcon: Xt,
        EllipsisIcon: $t,
        EmailIcon: oc,
        ExpandAltIcon: ec,
        ExpandIcon: nc,
        EyeCloseIcon: tc,
        EyeIcon: cc,
        FaceHappyIcon: rc,
        FaceNeutralIcon: Ic,
        FaceSadIcon: ac,
        FacebookIcon: sc,
        FailedIcon: lc,
        FastForwardIcon: ic,
        FigmaIcon: pc,
        FilterIcon: uc,
        FlagIcon: dc,
        FolderIcon: mc,
        FormIcon: Sc,
        GDriveIcon: _c,
        GithubIcon: hc,
        GitlabIcon: Cc,
        GlobeIcon: bc,
        GoogleIcon: Ac,
        GraphBarIcon: kc,
        GraphLineIcon: yc,
        GraphqlIcon: Tc,
        GridAltIcon: gc,
        GridIcon: Oc,
        GrowIcon: Bc,
        HeartHollowIcon: Pc,
        HeartIcon: Rc,
        HomeIcon: fc,
        HourglassIcon: wc,
        InfoIcon: Lc,
        ItalicIcon: Ec,
        JumpToIcon: Dc,
        KeyIcon: Uc,
        LightningIcon: vc,
        LightningOffIcon: xc,
        LinkBrokenIcon: Hc,
        LinkIcon: Mc,
        LinkedinIcon: Fc,
        LinuxIcon: Nc,
        ListOrderedIcon: Gc,
        ListUnorderedIcon: Wc,
        LocationIcon: Kc,
        LockIcon: Yc,
        MarkdownIcon: jc,
        MarkupIcon: Vc,
        MediumIcon: qc,
        MemoryIcon: zc,
        MenuIcon: Zc,
        MergeIcon: Jc,
        MirrorIcon: Qc,
        MobileIcon: Xc,
        MoonIcon: $c,
        NutIcon: or,
        OutboxIcon: er,
        OutlineIcon: C,
        PaintBrushIcon: nr,
        PaperClipIcon: tr,
        ParagraphIcon: cr,
        PassedIcon: rr,
        PhoneIcon: Ir,
        PhotoDragIcon: ar,
        PhotoIcon: sr,
        PhotoStabilizeIcon: lr,
        PinAltIcon: ir,
        PinIcon: pr,
        PlayAllHollowIcon: ur,
        PlayBackIcon: dr,
        PlayHollowIcon: mr,
        PlayIcon: Sr,
        PlayNextIcon: _r,
        PlusIcon: hr,
        PointerDefaultIcon: Cr,
        PointerHandIcon: br,
        PowerIcon: Ar,
        PrintIcon: kr,
        ProceedIcon: yr,
        ProfileIcon: Tr,
        PullRequestIcon: gr,
        QuestionIcon: Or,
        RSSIcon: Br,
        RedirectIcon: Pr,
        ReduxIcon: Rr,
        RefreshIcon: fr,
        ReplyIcon: wr,
        RepoIcon: Lr,
        RequestChangeIcon: Er,
        RewindIcon: Dr,
        RulerIcon: Ur,
        SaveIcon: vr,
        SearchIcon: xr,
        ShareAltIcon: Hr,
        ShareIcon: Mr,
        ShieldIcon: Fr,
        SideBySideIcon: Nr,
        SidebarAltIcon: Gr,
        SidebarAltToggleIcon: Wr,
        SidebarIcon: Kr,
        SidebarToggleIcon: Yr,
        SpeakerIcon: jr,
        StackedIcon: Vr,
        StarHollowIcon: qr,
        StarIcon: zr,
        StatusFailIcon: Zr,
        StatusIcon: Jr,
        StatusPassIcon: Qr,
        StatusWarnIcon: Xr,
        StickerIcon: $r,
        StopAltHollowIcon: oI,
        StopAltIcon: eI,
        StopIcon: nI,
        StorybookIcon: tI,
        StructureIcon: cI,
        SubtractIcon: rI,
        SunIcon: II,
        SupportIcon: aI,
        SweepIcon: sI,
        SwitchAltIcon: lI,
        SyncIcon: iI,
        TabletIcon: pI,
        ThumbsUpIcon: uI,
        TimeIcon: dI,
        TimerIcon: mI,
        TransferIcon: SI,
        TrashIcon: _I,
        TwitterIcon: hI,
        TypeIcon: CI,
        UbuntuIcon: bI,
        UndoIcon: AI,
        UnfoldIcon: kI,
        UnlockIcon: yI,
        UnpinIcon: TI,
        UploadIcon: gI,
        UserAddIcon: OI,
        UserAltIcon: BI,
        UserIcon: PI,
        UsersIcon: RI,
        VSCodeIcon: fI,
        VerifiedIcon: wI,
        VideoIcon: LI,
        WandIcon: EI,
        WatchIcon: DI,
        WindowsIcon: UI,
        WrenchIcon: vI,
        XIcon: xI,
        YoutubeIcon: HI,
        ZoomIcon: MI,
        ZoomOutIcon: FI,
        ZoomResetIcon: NI,
        iconList: GI,
      } = __STORYBOOK_ICONS__;
    var l = 'storybook/outline',
      b = 'outline',
      A = p(function () {
        let [t, r] = S(),
          i = _(),
          I = [!0, 'true'].includes(t[b]),
          a = u(() => r({ [b]: !I }), [I]);
        return (
          d(() => {
            i.setAddonShortcut(l, {
              label: 'Toggle Outline',
              defaultShortcut: ['alt', 'O'],
              actionName: 'outline',
              showInMenu: !1,
              action: a,
            });
          }, [a, i]),
          c.createElement(
            h,
            {
              key: 'outline',
              active: I,
              title: 'Apply outlines to the preview',
              onClick: a,
            },
            c.createElement(C, null)
          )
        );
      });
    s.register(l, () => {
      s.add(l, {
        title: 'Outline',
        type: m.TOOL,
        match: ({ viewMode: t, tabId: r }) =>
          !!(t && t.match(/^(story|docs)$/)) && !r,
        render: () => c.createElement(A, null),
      });
    });
  })();
} catch (e) {
  console.error(
    '[Storybook] One of your manager-entries failed: ' + import.meta.url,
    e
  );
}
