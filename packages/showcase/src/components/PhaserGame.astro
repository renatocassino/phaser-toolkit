---
export interface Props {
  width?: number;
  height?: number;
  className?: string;
}

const { width = 800, height = 600, className = "" } = Astro.props;
---

<div class={`bg-white rounded-lg shadow-sm border border-gray-200 p-4 ${className}`}>
  <h3 class="text-lg font-semibold text-gray-900 mb-4">Live Example</h3>
  <div 
    id={'game-container'}
    data-width={width}
    data-height={height}
    class="w-full bg-gray-100 rounded border flex items-center justify-center"
    style={`height: ${height}px;`}
  >
    <div class="text-gray-500 text-center">
      <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto mb-2"></div>
      <p>Loading game...</p>
    </div>
  </div>
</div>

<script>
  // This will be executed on the client side
  import * as Phaser from 'phaser';
  
  const gameContainer = document.getElementById('game-container');
  if (gameContainer) {
    const width = gameContainer.getAttribute('data-width') ?? 1024;
    const height = gameContainer.getAttribute('data-height') ?? 768;

    // Clear the container content before initializing Phaser
    gameContainer.innerHTML = '';

    // This will be overridden by the specific component
    (window as any).gameContainer = {
      type: Phaser.AUTO,
      width: parseInt(width as string),
      height: parseInt(height as string),
      parent: 'game-container',
      backgroundColor: '#f3f4f6',
      scene: []
    };
  }
</script>