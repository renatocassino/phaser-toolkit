---
import Layout from '../../layouts/Layout.astro';
import PhaserGame from '../../components/PhaserGame.astro';
---

<Layout title="Hudini Install - Base Scene" description="Examples of how to install and use Hudini with SceneWithHudini base class.">
  <div class="space-y-8">
    <!-- Description -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
      <h2 class="text-xl font-semibold text-gray-900 mb-4">Install - Base Scene</h2>
      <p class="text-gray-600 mb-4">
        Examples of how to install and use Hudini with SceneWithHudini base class for type-safe theming and utilities.
      </p>
      
      <!-- Features -->
      <div class="mb-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-3">Features</h3>
        <ul class="list-disc list-inside space-y-1 text-gray-600">
          <li>üé® <strong>Type-Safe Theming</strong>: Full TypeScript support for custom themes</li>
          <li>üîß <strong>Base Scene Class</strong>: SceneWithHudini provides easy access to utilities</li>
          <li>üéØ <strong>Color Management</strong>: Type-safe color access with custom theme colors</li>
          <li>üìè <strong>Font Sizing</strong>: Consistent font sizing with theme integration</li>
          <li>‚ö° <strong>Performance</strong>: Optimized for 60fps gameplay</li>
        </ul>
      </div>
    </div>

    <!-- Live Example -->
    <PhaserGame id="hudini-install-base-scene-demo" width={600} height={400} />

    <!-- Usage Example -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
      <h3 class="text-lg font-semibold text-gray-900 mb-3">Usage Example</h3>
      <div class="bg-gray-900 rounded-lg p-4 overflow-x-auto">
        <pre class="text-sm text-gray-100"><code>{`import Phaser from 'phaser';
import {
    Color,
    createTheme,
    HUDINI_KEY,
    HudiniPlugin,
    SceneWithHudini
} from 'hudini';

const theme = createTheme({
    colors: {
        primary: 'red-500',
        secondary: 'blue-500',
        tertiary: 'green-500',
    }
});
type Theme = typeof theme;

class PreviewScene extends SceneWithHudini<Theme> {
    constructor() {
        super('preview');
    }

    create(): void {
        const { pw } = this.hudini;
        this.cameras.main.setBackgroundColor(pw.color.slate(900));

        let y = 90;
        this.add
            .text(300, y, 'Primary color', {
                fontSize: pw.fontSize.css('2xl'),
                color: pw.color.rgb('primary'),
            })
            .setOrigin(0.5);
        y += 100;
        this.add
            .text(300, y, 'Secondary color', {
                fontSize: pw.fontSize.css('2xl'),
                color: pw.color.rgb('secondary'),
            })
            .setOrigin(0.5);
        y += 100;
        this.add
            .text(300, y, 'Tertiary color', {
                fontSize: pw.fontSize.css('2xl'),
                color: pw.color.rgb('tertiary'),
            })
            .setOrigin(0.5);
    }
}`}</code></pre>
      </div>
    </div>

    <!-- Installation Steps -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
      <h3 class="text-lg font-semibold text-gray-900 mb-4">Installation Steps</h3>
      <div class="space-y-4">
        <div class="flex items-start space-x-3">
          <div class="flex-shrink-0 w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center">
            <span class="text-sm font-semibold text-blue-600">1</span>
          </div>
          <div>
            <h4 class="font-medium text-gray-900">Install Hudini</h4>
            <p class="text-sm text-gray-600">Install the Hudini package in your project</p>
            <div class="bg-gray-900 rounded p-2 mt-2">
              <code class="text-sm text-gray-100">npm install hudini</code>
            </div>
          </div>
        </div>
        
        <div class="flex items-start space-x-3">
          <div class="flex-shrink-0 w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center">
            <span class="text-sm font-semibold text-blue-600">2</span>
          </div>
          <div>
            <h4 class="font-medium text-gray-900">Create Theme</h4>
            <p class="text-sm text-gray-600">Define your custom theme with colors and other properties</p>
          </div>
        </div>
        
        <div class="flex items-start space-x-3">
          <div class="flex-shrink-0 w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center">
            <span class="text-sm font-semibold text-blue-600">3</span>
          </div>
          <div>
            <h4 class="font-medium text-gray-900">Extend SceneWithHudini</h4>
            <p class="text-sm text-gray-600">Use SceneWithHudini as your base scene class for type safety</p>
          </div>
        </div>
        
        <div class="flex items-start space-x-3">
          <div class="flex-shrink-0 w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center">
            <span class="text-sm font-semibold text-blue-600">4</span>
          </div>
          <div>
            <h4 class="font-medium text-gray-900">Configure Plugin</h4>
            <p class="text-sm text-gray-600">Add the HudiniPlugin to your Phaser game configuration</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { Color, createTheme, HUDINI_KEY, HudiniPlugin, SceneWithHudini } from 'hudini';

  const theme = createTheme({
    colors: {
      primary: 'red-500',
      secondary: 'blue-500',
      tertiary: 'green-500',
    },
  });
  type Theme = typeof theme;

  class InstallBaseSceneDemo extends SceneWithHudini<Theme> {
    constructor() {
      super('install-base-scene');
    }

    create(): void {
      const { pw } = this.hudini;
      this.cameras.main.setBackgroundColor(pw.color.slate(900));

      let y = 90;
      this.add
        .text(300, y, 'Primary color', {
          fontSize: pw.fontSize.css('2xl'),
          color: pw.color.rgb('primary'),
        })
        .setOrigin(0.5);
      y += 100;
      this.add
        .text(300, y, 'Secondary color', {
          fontSize: pw.fontSize.css('2xl'),
          color: pw.color.rgb('secondary'),
        })
        .setOrigin(0.5);
      y += 100;
      this.add
        .text(300, y, 'Tertiary color', {
          fontSize: pw.fontSize.css('2xl'),
          color: pw.color.rgb('tertiary'),
        })
        .setOrigin(0.5);
    }
  }

  // Initialize the game when the page loads
  document.addEventListener('DOMContentLoaded', () => {
    const gameConfig = (window as any).__phaserGameConfigs?.['hudini-install-base-scene-demo'];
    if (gameConfig) {
      const game = new Phaser.Game({
        ...gameConfig,
        plugins: {
          global: [
            {
              key: HUDINI_KEY,
              plugin: HudiniPlugin,
              mapping: HUDINI_KEY,
              data: {
                theme,
              },
            },
          ],
        },
        scene: [InstallBaseSceneDemo],
      });
      
      // Store the game instance
      if (!(window as any).__phaserGames) {
        (window as any).__phaserGames = {};
      }
      (window as any).__phaserGames['hudini-install-base-scene-demo'] = game;
    }
  });
</script>