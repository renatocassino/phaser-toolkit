---
import Layout from '../../layouts/Layout.astro';
import PhaserGame from '../../components/PhaserGame.astro';
---

<Layout title="Hudini Text Button Component" description="Interactive button with text content and hover effects, built with PhaserWind theming.">
  <div class="space-y-8">
    <!-- Description -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
      <h2 class="text-xl font-semibold text-gray-900 mb-4">Text Button Component</h2>
      <p class="text-gray-600 mb-4">
        Interactive button with text content and hover effects, built with PhaserWind theming system.
      </p>
      
      <!-- Features -->
      <div class="mb-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-3">Features</h3>
        <ul class="list-disc list-inside space-y-1 text-gray-600">
          <li>üñ±Ô∏è <strong>Interactive</strong>: Click and hover effects with smooth transitions</li>
          <li>üé® <strong>Customizable</strong>: Extensive styling options with PhaserWind tokens</li>
          <li>üì± <strong>Responsive</strong>: Adapts to different screen sizes and orientations</li>
          <li>‚ö° <strong>Performance</strong>: Optimized for 60fps gameplay</li>
        </ul>
      </div>

      <!-- Props -->
      <div class="mb-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-3">Props</h3>
        <div class="bg-gray-50 rounded-lg p-4">
          <ul class="space-y-2 text-sm">
            <li><code class="bg-gray-200 px-2 py-1 rounded">text</code> - Button text content</li>
            <li><code class="bg-gray-200 px-2 py-1 rounded">backgroundColor</code> - Background color token or CSS color</li>
            <li><code class="bg-gray-200 px-2 py-1 rounded">textColor</code> - Text color token or CSS color</li>
            <li><code class="bg-gray-200 px-2 py-1 rounded">borderRadius</code> - Border radius token or pixel value</li>
            <li><code class="bg-gray-200 px-2 py-1 rounded">margin</code> - Internal padding using spacing tokens</li>
            <li><code class="bg-gray-200 px-2 py-1 rounded">fontSize</code> - Text size using typography tokens</li>
          </ul>
        </div>
      </div>
    </div>

    <!-- Live Example -->
    <PhaserGame width={800} height={600} />

    <!-- Usage Example -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
      <h3 class="text-lg font-semibold text-gray-900 mb-3">Usage Example</h3>
      <div class="bg-gray-900 rounded-lg p-4 overflow-x-auto">
        <pre class="text-sm text-gray-100"><code>{`import Phaser from 'phaser';
import {
    Color,
    createTheme,
    HUDINI_KEY,
    HudiniPlugin,
    SceneWithHudini,
    TextButton
} from 'hudini';

const theme = createTheme({});
type Theme = typeof theme;

class ButtonDemoScene extends SceneWithHudini<Theme> {
    constructor() {
        super('button-demo');
    }

    create(): void {
        const { pw } = this.hudini;
        this.cameras.main.setBackgroundColor(pw.color.slate(900));

        // Create a primary button
        const primaryButton = new TextButton({
            scene: this,
            x: this.cameras.main.centerX,
            y: this.cameras.main.centerY - 50,
            text: 'Primary Button',
            backgroundColor: 'blue-500',
            textColor: 'white',
            borderRadius: 'md',
            margin: '4',
        });
        this.add.existing(primaryButton);

        // Create a secondary button
        const secondaryButton = new TextButton({
            scene: this,
            x: this.cameras.main.centerX,
            y: this.cameras.main.centerY + 50,
            text: 'Secondary Button',
            backgroundColor: 'gray-200',
            textColor: 'gray-800',
            borderRadius: 'lg',
            margin: '6',
        });
        this.add.existing(secondaryButton);
    }
}`}</code></pre>
      </div>
    </div>
  </div>
</Layout>

<script>
  import Phaser from 'phaser';
  import {
    Color,
    createTheme,
    HUDINI_KEY,
    HudiniPlugin,
    SceneWithHudini,
    TextButton
  } from 'hudini';

  // Create theme
  const theme = createTheme({});
  type Theme = typeof theme;

  class TextButtonDemoScene extends SceneWithHudini<Theme> {
    private buttons: TextButton[] = [];

    constructor() {
      super('text-button-demo');
    }

    create(): void {
      const { pw } = this.hudini;
      this.cameras.main.setBackgroundColor(pw.color.slate(900));

      // Title
      this.add.text(this.cameras.main.centerX, 80, 'Text Button Examples', {
        color: pw.color.slate(200),
        align: 'center',
        fontSize: '32px',
      }).setOrigin(0.5, 0.5);

      // Create different button styles
      const buttonConfigs = [
        { text: 'Primary', bg: 'blue-500', textColor: 'white', y: 150 },
        { text: 'Secondary', bg: 'gray-200', textColor: 'gray-800', y: 200 },
        { text: 'Success', bg: 'green-500', textColor: 'white', y: 250 },
        { text: 'Warning', bg: 'yellow-500', textColor: 'black', y: 300 },
        { text: 'Danger', bg: 'red-500', textColor: 'white', y: 350 },
        { text: 'Info', bg: 'cyan-500', textColor: 'white', y: 400 },
      ];

      buttonConfigs.forEach((config, index) => {
        const button = new TextButton({
          scene: this,
          x: this.cameras.main.centerX,
          y: config.y,
          text: config.text,
          backgroundColor: config.bg,
          textColor: config.textColor,
          borderRadius: 'md',
          margin: '4',
        });
        
        // Add click interaction
        button.setInteractive();
        button.on('pointerdown', () => {
          console.log(`${config.text} button clicked!`);
          // Add a simple click effect
          button.setScale(0.95);
        });
        button.on('pointerup', () => {
          button.setScale(1);
        });
        button.on('pointerover', () => {
          button.setScale(1.05);
        });
        button.on('pointerout', () => {
          button.setScale(1);
        });

        this.add.existing(button);
        this.buttons.push(button);
      });

      // Add instructions
      this.add.text(this.cameras.main.centerX, 500, 'Click and hover over the buttons to see interactions', {
        color: pw.color.slate(400),
        align: 'center',
        fontSize: '16px',
      }).setOrigin(0.5, 0.5);
    }
  }

  // Initialize the game when the page loads
  document.addEventListener('DOMContentLoaded', () => {
    const gameConfig = (window as any).gameContainer;
    if (gameConfig) {
      const game = new Phaser.Game({
        ...gameConfig,
        scene: [TextButtonDemoScene],
        plugins: {
          global: [
            {
              key: HUDINI_KEY,
              plugin: HudiniPlugin,
              mapping: HUDINI_KEY,
              data: {
                theme,
              },
            },
          ],
        },
      });
      
      // Store the game instance
      if (!(window as any).__phaserGames) {
        (window as any).__phaserGames = {};
      }
      (window as any).__phaserGames['hudini-text-button-demo'] = game;
    }
  });
</script>